Renderer.1 {
}

Renderer.2 {
    BackgroundColor = #F5F5F5;
    BackgroundColorDisabled = #E6E6E6;
    BackgroundColorHover = white;
    BorderColor = #3C3C3C;
    BorderColorDisabled = #7D7D7D;
    BorderColorHover = black;
    Borders = (1, 1, 1, 1);
    CaretColor = black;
    CaretWidth = 1;
    DefaultTextColor = #A0A0A0;
    Padding = (0, 0, 0, 0);
    SelectedTextBackgroundColor = #006EFF;
    SelectedTextColor = white;
    TextColor = #3C3C3C;
    TextColorDisabled = #7D7D7D;
    Texture = None;
    TextureDisabled = None;
    TextureFocused = None;
    TextureHover = None;
}

Renderer.3 {
    BorderColor = #3C3C3C;
    BorderColorHover = black;
    Borders = (1, 1, 1, 1);
    TextureThumb = None;
    TextureThumbHover = None;
    TextureTrack = None;
    TextureTrackHover = None;
    ThumbColor = #F5F5F5;
    ThumbColorHover = white;
    TrackColor = #F5F5F5;
    TrackColorHover = white;
}

Renderer.4 {
    BackgroundColor = rgba(180, 180, 180, 215);
    BackgroundColorHover = rgba(190, 190, 190, 215);
    BorderColor = rgba(240, 240, 240, 215);
    Borders = 1;
    CheckColor = rgba(255, 255, 255, 180);
    CheckColorHover = rgba(255, 255, 255, 200);
    TextColor = rgba(255, 255, 255, 215);
    TextColorHover = rgba(255, 255, 255, 235);
    TextureChecked = None;
    TextureCheckedDisabled = None;
    TextureCheckedFocused = None;
    TextureCheckedHover = None;
    TextureUnchecked = None;
    TextureUncheckedDisabled = None;
    TextureUncheckedFocused = None;
    TextureUncheckedHover = None;
}

Label."Width Label" {
    HorizontalAlignment = Center;
    IgnoreMouseEvents = true;
    ScrollbarPolicy = Automatic;
    Size = (400, 100);
    Text = "Input Width";
    TextSize = 60;
    VerticalAlignment = Center;

    Renderer {
        BackgroundColor = transparent;
        BorderColor = #3C3C3C;
        Borders = (0, 0, 0, 0);
        TextColor = #3C3C3C;
        TextureBackground = None;

        Scrollbar {
            ArrowBackgroundColor = #F5F5F5;
            ArrowBackgroundColorHover = white;
            ArrowColor = #3C3C3C;
            ArrowColorHover = black;
            TextureArrowDown = None;
            TextureArrowDownHover = None;
            TextureArrowUp = None;
            TextureArrowUpHover = None;
            TextureThumb = None;
            TextureThumbHover = None;
            TextureTrack = None;
            TextureTrackHover = None;
            ThumbColor = #DCDCDC;
            ThumbColorHover = #E6E6E6;
            TrackColor = #F5F5F5;
        }
    }
}

EditBoxSlider."Width Slider" {
    DecimalPlaces = 0;
    Position = (0, 100);
    Size = (400, 100);

    Renderer {
    }

    Group {
        Renderer = &1;
        Size = (400, 100);

        EditBox.EditBox {
            Alignment = Center;
            InputValidator = Float;
            Renderer = &2;
            Size = (400, 75);
            Text = 1;
            TextSize = 13;
        }

        Slider.Slider {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 600;
            Minimum = 1;
            Position = (EditBox.left, EditBox.top + EditBox.height);
            Renderer = &3;
            Size = (400, 25);
            Step = 1;
            Value = 1;
        }
    }
}

Label."Height Label" {
    HorizontalAlignment = Center;
    Position = (0, 200);
    ScrollbarPolicy = Automatic;
    Size = (400, 100);
    Text = "Input Height";
    TextSize = 60;
    VerticalAlignment = Center;

    Renderer {
        BackgroundColor = transparent;
        BorderColor = #3C3C3C;
        Borders = (0, 0, 0, 0);
        TextColor = #3C3C3C;
        TextureBackground = None;

        Scrollbar {
            ArrowBackgroundColor = #F5F5F5;
            ArrowBackgroundColorHover = white;
            ArrowColor = #3C3C3C;
            ArrowColorHover = black;
            TextureArrowDown = None;
            TextureArrowDownHover = None;
            TextureArrowUp = None;
            TextureArrowUpHover = None;
            TextureThumb = None;
            TextureThumbHover = None;
            TextureTrack = None;
            TextureTrackHover = None;
            ThumbColor = #DCDCDC;
            ThumbColorHover = #E6E6E6;
            TrackColor = #F5F5F5;
        }
    }
}

EditBoxSlider."Height Slider" {
    DecimalPlaces = 0;
    Position = (0, 300);
    Size = (400, 100);

    Renderer {
    }

    Group {
        Renderer = &1;
        Size = (400, 100);

        EditBox.EditBox {
            Alignment = Center;
            InputValidator = Float;
            Renderer = &2;
            Size = (400, 75);
            Text = 1;
            TextSize = 13;
        }

        Slider.Slider {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 400;
            Minimum = 1;
            Position = (EditBox.left, EditBox.top + EditBox.height);
            Renderer = &3;
            Size = (400, 25);
            Step = 1;
            Value = 1;
        }
    }
}

Label."Wall Count Label" {
    HorizontalAlignment = Center;
    MaximumTextWidth = 700;
    Position = (0, 400);
    ScrollbarPolicy = Automatic;
    Size = (800, 100);
    Text = "Input Number of Walls";
    TextSize = 46;
    VerticalAlignment = Center;

    Renderer {
        BackgroundColor = transparent;
        BorderColor = #3C3C3C;
        Borders = (0, 0, 0, 0);
        TextColor = #3C3C3C;
        TextureBackground = None;

        Scrollbar {
            ArrowBackgroundColor = #F5F5F5;
            ArrowBackgroundColorHover = white;
            ArrowColor = #3C3C3C;
            ArrowColorHover = black;
            TextureArrowDown = None;
            TextureArrowDownHover = None;
            TextureArrowUp = None;
            TextureArrowUpHover = None;
            TextureThumb = None;
            TextureThumbHover = None;
            TextureTrack = None;
            TextureTrackHover = None;
            ThumbColor = #DCDCDC;
            ThumbColorHover = #E6E6E6;
            TrackColor = #F5F5F5;
        }
    }
}

EditBoxSlider."Wall Count Slider" {
    DecimalPlaces = 0;
    Position = (0, 500);
    Size = (800, 100);

    Renderer {
    }

    Group {
        Renderer = &1;
        Size = (800, 100);

        EditBox.EditBox {
            Alignment = Center;
            InputValidator = Float;
            Renderer = &2;
            Size = (800, 75);
            Text = 1;
            TextSize = 13;
        }

        Slider.Slider {
            ChangeValueOnScroll = true;
            InvertedDirection = false;
            Maximum = 479000;
            Minimum = 1;
            Position = (EditBox.left, EditBox.top + EditBox.height);
            Renderer = &3;
            Size = (800, 25);
            Step = 1;
            Value = 1;
        }
    }
}

CheckBox."Brute Force" {
    Position = (450, 50);
    Renderer = &4;
    Size = (100, 100);
    Text = "Breadth First Search";
    TextSize = 15;
}

CheckBox."A* Algo" {
    Position = (450, 250);
    Renderer = &4;
    Size = (100, 100);
    Text = "A* Algorithm";
    TextSize = 15;
}

Button."Render Button" {
    Position = (0, 600);
    Size = (800, 200);
    Text = "Visualize Algorithm";
    TextSize = 70;

    Renderer {
        BackgroundColor = rgba(180, 180, 180, 215);
        BackgroundColorDown = rgba(150, 150, 150, 215);
        BackgroundColorHover = rgba(190, 190, 190, 215);
        BorderColor = rgba(240, 240, 240, 215);
        Borders = 1;
        TextColor = rgba(255, 255, 255, 215);
        TextColorDown = rgba(255, 255, 255, 235);
        TextColorHover = rgba(255, 255, 255, 235);
        Texture = None;
        TextureDisabled = None;
        TextureDown = None;
        TextureDownFocused = None;
        TextureDownHover = None;
        TextureFocused = None;
        TextureHover = None;
    }
}
